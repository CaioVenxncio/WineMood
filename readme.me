# WineMood - Classificador de Sentimentos para Avalia√ß√µes de Vinhos

WineMood √© um sistema inteligente que analisa avalia√ß√µes textuais de vinhos e classifica automaticamente o sentimento expresso como positivo, neutro ou negativo. Utilizando t√©cnicas de Processamento de Linguagem Natural (NLP) combinadas com Deep Learning, o projeto transforma a linguagem humana em insights √∫teis para consumidores e empresas.

## üìã Vis√£o Geral

Este classificador pode ser integrado em plataformas de e-commerce de vinhos, como a Vinheria Agnello, oferecendo aos clientes uma an√°lise autom√°tica de sentimentos das avalia√ß√µes antes de fazer uma compra.

### üéØ Objetivos

- Aplicar t√©cnicas de NLP e Deep Learning a dados do mundo real
- Construir um modelo capaz de entender e classificar emo√ß√µes em texto
- Desenvolver uma interface web amig√°vel para testes em tempo real
- Apresentar uma prova de conceito pr√°tica e aplic√°vel para empresas

## üß∞ Tecnologias e Ferramentas

| Categoria | Tecnologia |
|-----------|------------|
| Linguagem de Programa√ß√£o | Python |
| Framework de Deep Learning | TensorFlow + Keras |
| Manipula√ß√£o de Dados | Pandas, NumPy |
| NLP & Pr√©-processamento | NLTK, Regex, Tokenizer |
| Interface Web | Streamlit |
| Dataset | Wine Reviews (Kaggle) |
| Plataforma de Treinamento | Google Colab (com GPU gratuita) |
| Visualiza√ß√£o | Matplotlib / Streamlit |
| Controle de Vers√£o | GitHub |

## üì¶ Dataset

- **Nome**: Wine Reviews Dataset
- **Fonte**: Kaggle (https://www.kaggle.com/datasets/zynicide/wine-reviews)
- **Registros**: ~130.000 avalia√ß√µes de vinhos
- **Colunas utilizadas**:
  - `description`: texto da avalia√ß√£o do vinho
  - `points`: pontua√ß√£o do vinho (de 80 a 100)
- **R√≥tulo derivado**: Sentimento (positivo, neutro, negativo) baseado na pontua√ß√£o

## üîß Etapas de Desenvolvimento

### 1. Coleta e Explora√ß√£o de Dados
- Carregamento do dataset usando pandas
- Verifica√ß√£o de valores nulos, distribui√ß√£o de classes e estat√≠sticas descritivas

### 2. Cria√ß√£o de R√≥tulos
- Convers√£o de pontua√ß√µes num√©ricas em categorias de sentimento:
  - ‚â• 90: Positivo
  - 80‚Äì89: Neutro
  - < 80: Negativo

### 3. Pr√©-processamento de Texto
- Limpeza de texto (min√∫sculas, remo√ß√£o de pontua√ß√£o e stopwords)
- Tokeniza√ß√£o e padroniza√ß√£o de sequ√™ncias para comprimento fixo

### 4. Treinamento do Modelo de Deep Learning
- **Arquitetura do modelo**:
  - Embedding para vetoriza√ß√£o de texto
  - LSTM para compreens√£o de sequ√™ncia
  - Dense com softmax para classifica√ß√£o
- Divis√£o treino/teste (80/20)
- M√©tricas: acur√°cia, perda

### 5. Avalia√ß√£o
- Avalia√ß√£o do modelo no conjunto de teste usando `.evaluate()`
- Impress√£o da acur√°cia e an√°lise de predi√ß√µes incorretas

### 6. Interface Web (Streamlit)
- Interface web onde os usu√°rios podem inserir avalia√ß√µes de texto
- O modelo prev√™ e exibe o sentimento detectado
- Funcionalidades extras:
  - Gr√°fico de barras com percentuais de sentimentos
  - Processamento de m√∫ltiplas avalia√ß√µes simultaneamente
  - Aba "Sobre o projeto" com explica√ß√µes detalhadas

## üñº Exemplo de Uso

**Entrada do Usu√°rio**:
"Great complexity with floral aromas and a long finish."

**Sa√≠da Prevista**:
Sentimento: Positivo

## üåç Aplica√ß√µes no Mundo Real

- Recomenda√ß√£o autom√°tica de vinhos com base no sentimento do cliente
- Aux√≠lio a vendedores e produtores de vinho para entender a percep√ß√£o do p√∫blico
- Destaque de vinhos bem avaliados em plataformas de e-commerce

## üìà Resultados Esperados

- Acur√°cia acima de 80% com dados de treinamento balanceados
- Interface web leve e responsiva
- C√≥digo modular e reutiliz√°vel para tarefas similares de an√°lise de sentimentos

## üöÄ Destaques do Projeto

- Projeto totalmente funcional com interface em tempo real
- Utiliza dados do mundo real com aplica√ß√µes pr√°ticas
- Combina NLP, LSTM e implanta√ß√£o Web
- Pronto para integra√ß√£o em plataformas comerciais

## üìù Instru√ß√µes de Uso

### Execu√ß√£o Local

1. Clone o reposit√≥rio
2. Instale as depend√™ncias: `pip install -r requirements.txt`
3. Execute o aplicativo Streamlit: `streamlit run app.py`

### Google Colab

1. Abra o notebook `colab_notebook.ipynb` no Google Colab
2. Execute todas as c√©lulas para treinar o modelo e gerar os arquivos necess√°rios
3. Baixe os arquivos gerados (model.h5, tokenizer.pickle) para uso local

### Deploy Online

O aplicativo pode ser implantado no Streamlit Cloud para acesso p√∫blico:

1. Crie uma conta no Streamlit Cloud
2. Conecte seu reposit√≥rio GitHub contendo os arquivos do projeto
3. Configure o deploy com o arquivo principal como app.py

## üë• Contribui√ß√µes

Contribui√ß√µes s√£o bem-vindas! Sinta-se √† vontade para abrir issues ou enviar pull requests com melhorias.

## üìÑ Licen√ßa

Este projeto est√° licenciado sob a licen√ßa MIT - veja o arquivo LICENSE para detalhes.
